#N canvas 23 37 1406 891 12;
#X declare -path ./babs;
#X floatatom 58 1204 5 0 0 0 - - - 0;
#X obj 58 1170 r \$0-get-thisParam;
#X obj 58 848 r~ \$0-get-thisParam;
#X obj 631 84 inlet~, f 34;
#X obj 866 269 outlet;
#X obj 631 274 outlet~;
#X obj 61 914 *~;
#X obj 74 887 noise~;
#X obj 61 1039 dac~;
#X obj 992 81 declare -path ./babs;
#N canvas 382 419 450 300 do-the-thing 0;
#X obj 113 195 outlet~;
#X obj 112 82 inlet~;
#X obj 313 82 inlet;
#X obj 315 192 outlet;
#X text 163 136 BUILD MODULE HERE;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X restore 631 185 pd do-the-thing;
#X text 36 595 ------------------------------ PARAMETERS -----------------------------------------------------------------------, f 114;
#X msg 474 680 stop;
#X obj 485 983 babs.bline~;
#X text 58 1132 or [r \$0-get-*] for control rate;
#X text 59 806 access parameters with [r~ \$0-get-*] for signal rate, f 38;
#X text 582 948 < internally \, parameters uses the babs.bline~ and babs.blineseq abstractions for automation. See the babs.bline~ help file for details., f 27;
#X obj 61 1231 hsl 162 19 0 1 0 0 empty empty empty -2 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X text 1108 670 parameters accept a variety of messages!, f 23;
#N canvas 237 274 450 300 thisModule 0;
#X obj 80 46 inlet~;
#X obj 115 99 babs.inout \$0;
#X connect 0 1 1 0;
#X restore 968 886 pd thisModule;
#X msg 1002 778 thisParam loop 0.5 1000 0 1000 1 1000;
#X msg 1015 810 thisParam stop;
#X msg 1021 835 thisParam 0 100;
#X msg 997 744 thisParam loop 1 0 300;
#X obj 485 950 babs.blineseq;
#X text 961 1060 stop // freeze automation \;, f 95;
#X text 962 977 f // set \; f1 f2 //go to f1 in f2ms \; f1 f2 f3 // go from f1 to f2 in f3ms \; f1 f2 f3 f4 // go to f1 in f2ms \, go to f3 in f4ms...etc for an even number of arguments \;, f 64;
#X text 962 1096 loop f // set \; loop f1 f2 //go to f1 in f2ms \; loop f1 f2 f3 // go from f1 to f2 in f3ms \, reapeat \; loop f1 f2 f3 f4 // go to f1 in f2ms \, go to f3 in f4ms...etc for an even number of arguments \, repeat \;, f 62;
#X obj 734 148 r \$0-midi;
#X obj 1085 304 r \$0-stop;
#X obj 1100 329 r \$0-params;
#X obj 1068 282 r \$0-dump;
#X obj 1055 258 r \$0-midi;
#X text 574 677 stop all automation and midi notes;
#X text 637 708 stop all parameter automation;
#X msg 495 745 dump;
#X text 959 597 -----------PARAMETER MESSAGES ------------------;
#N canvas 237 274 450 300 thisModule 0;
#X obj 80 46 inlet~;
#X obj 115 99 babs.inout \$0;
#X connect 0 1 1 0;
#X restore 62 709 pd thisModule;
#X obj 855 153 cnv 19 126 76 empty empty empty 20 12 0 12 #c6feff #404040 0;
#X obj 866 178 babs.inout \$0;
#X text 611 18 ---------- bop module template -----------------------------------------------, f 81;
#X msg 506 773 reset;
#X obj 884 83 inlet;
#X text 626 59 Signal in left \, MIDI/msg in all;
#X text 866 296 MIDI/msg out right, f 20;
#X text 621 302 Signal out left, f 16;
#X obj 73 95 cnv 19 300 76 empty empty empty 20 12 0 12 #c6feff #404040 0;
#X text 1485 1238 comment;
#X obj 100 122 babs.param \$0 thisParam 0;
#X text 395 112 \$1: parent \$0;
#X text 394 131 \$2: label;
#X text 394 92 arguments:;
#X text 395 151 \$3: default value;
#X text 61 18 babs.param is provides internal automation per parameter in bop, f 63;
#X text 1004 161 [babs.param] relies on [babs.inout] for message forwarding from a parent abstraction, f 41;
#X obj 76 351 babs.param.msg \$0 go;
#X obj 76 383 babs.param \$0 paramWithBounds 50 0 100;
#X text 397 211 \$5: min;
#X text 396 191 \$4: min;
#X text 461 186 optional - bop.ui creates numberbox, f 13;
#X obj 76 414 babs.param.attr \$0 paramThatIslist;
#X obj 76 443 babs.param.spacer;
#X text 363 381 param: includes high and low bounds;
#X text 366 350 message: event;
#X text 360 415 attribute: symbol or list;
#X text 360 447 spacer: blank gui element;
#X text 61 320 different kinds of params:;
#N canvas 414 249 430 375 todo 0;
#X msg 29 165 param curve \$1 \$2;
#X msg 33 216 tempo 120 16;
#X msg 29 137 curve \$1 \$2;
#X msg 28 74 param tempo \$1 \$2;
#X msg 28 47 tempo \$1 \$2;
#X text 133 214 120 bpm \, 16th notes;
#X text 96 233 < go from 1 to 1 in 3 16th notes;
#X msg 33 235 0 1 3;
#X msg 32 274 tempo 120 0;
#X text 132 272 if units is 0 \, timing is in milliseconds;
#X msg 33 293 0 1 3000;
#X text 106 291 < go from 1 to 1 in 3 seconds;
#X text 139 42 control blineseq timing;
#X text 132 128 control bline~ curve;
#X text 14 21 -----------todo ------------------;
#X restore 69 508 pd todo;
#X obj 61 985 *~ 0.2;
#X obj 61 948 lop~ 1200;
#X msg 970 679 thisParam 1 1000;
#X msg 989 716 thisParam 0 10;
#X msg 62 679 thisParam 0.5;
#X text 62 643 params can be set by name;
#N canvas 237 274 450 300 thisModule 0;
#X obj 80 46 inlet~;
#X obj 115 99 babs.inout \$0;
#X connect 0 1 1 0;
#X restore 472 803 pd thisModule;
#X msg 484 709 parameter-name stop;
#X text 572 738 print parameters and states;
#X text 568 770 reset parameters to default values;
#X connect 0 0 17 0;
#X connect 1 0 0 0;
#X connect 2 0 6 0;
#X connect 3 0 10 0;
#X connect 3 1 39 0;
#X connect 6 0 69 0;
#X connect 7 0 6 1;
#X connect 10 0 5 0;
#X connect 10 1 4 0;
#X connect 12 0 74 0;
#X connect 20 0 19 0;
#X connect 21 0 19 0;
#X connect 22 0 19 0;
#X connect 23 0 19 0;
#X connect 24 0 13 0;
#X connect 28 0 10 1;
#X connect 35 0 74 0;
#X connect 39 0 4 0;
#X connect 41 0 74 0;
#X connect 42 0 39 0;
#X connect 68 0 8 0;
#X connect 68 0 8 1;
#X connect 69 0 68 0;
#X connect 70 0 19 0;
#X connect 71 0 19 0;
#X connect 72 0 37 0;
#X connect 75 0 74 0;
#X coords 0 891 1 890 166 150 0;
