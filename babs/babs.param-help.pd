#N canvas 236 41 1099 712 12;
#X declare -path ./babs;
#X floatatom 65 1245 5 0 0 0 - - - 0;
#X obj 65 1211 r \$0-get-thisParam;
#X obj 65 889 r~ \$0-get-thisParam;
#X obj 697 161 inlet~, f 34;
#X obj 932 346 outlet;
#X obj 697 351 outlet~;
#X obj 68 955 *~;
#X obj 81 928 noise~;
#X obj 68 1080 dac~;
#X obj 1058 158 declare -path ./babs;
#N canvas 382 419 450 300 do-the-thing 0;
#X obj 113 195 outlet~;
#X obj 112 82 inlet~;
#X obj 313 82 inlet;
#X obj 315 192 outlet;
#X text 163 136 BUILD MODULE HERE;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X restore 697 262 pd do-the-thing;
#X text 43 636 ------------------------------ PARAMETERS -----------------------------------------------------------------------, f 114;
#X msg 481 721 stop;
#X obj 492 1024 babs.bline~;
#X text 65 1173 or [r \$0-get-*] for control rate;
#X text 66 847 access parameters with [r~ \$0-get-*] for signal rate, f 38;
#X text 589 989 < internally \, parameters uses the babs.bline~ and babs.blineseq abstractions for automation. See the babs.bline~ help file for details., f 27;
#X obj 68 1272 hsl 162 19 0 1 0 0 empty empty empty -2 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X text 1115 711 parameters accept a variety of messages!, f 23;
#N canvas 237 274 450 300 thisModule 0;
#X obj 80 46 inlet~;
#X obj 115 99 babs.inout \$0;
#X connect 0 1 1 0;
#X restore 975 927 pd thisModule;
#X msg 1009 819 thisParam loop 0.5 1000 0 1000 1 1000;
#X msg 1022 851 thisParam stop;
#X msg 1028 876 thisParam 0 100;
#X msg 1004 785 thisParam loop 1 0 300;
#X obj 492 991 babs.blineseq;
#X text 968 1101 stop // freeze automation \;, f 95;
#X text 969 1018 f // set \; f1 f2 //go to f1 in f2ms \; f1 f2 f3 // go from f1 to f2 in f3ms \; f1 f2 f3 f4 // go to f1 in f2ms \, go to f3 in f4ms...etc for an even number of arguments \;, f 64;
#X text 969 1137 loop f // set \; loop f1 f2 //go to f1 in f2ms \; loop f1 f2 f3 // go from f1 to f2 in f3ms \, reapeat \; loop f1 f2 f3 f4 // go to f1 in f2ms \, go to f3 in f4ms...etc for an even number of arguments \, repeat \;, f 62;
#X obj 800 225 r \$0-midi;
#X obj 1151 381 r \$0-stop;
#X obj 1166 406 r \$0-params;
#X obj 1134 359 r \$0-dump;
#X obj 1121 335 r \$0-midi;
#X text 581 718 stop all automation and midi notes;
#X text 644 749 stop all parameter automation;
#X msg 502 786 dump;
#X text 966 638 -----------PARAMETER MESSAGES ------------------;
#N canvas 237 274 450 300 thisModule 0;
#X obj 80 46 inlet~;
#X obj 115 99 babs.inout \$0;
#X connect 0 1 1 0;
#X restore 69 750 pd thisModule;
#X obj 921 230 cnv 19 126 76 empty empty empty 20 12 0 12 #c6feff #404040 0;
#X obj 932 255 babs.inout \$0;
#X text 686 66 ---------- bop module template -----------------------------------------------, f 81;
#X msg 513 814 reset;
#X obj 950 160 inlet;
#X text 692 136 Signal in left \, MIDI/msg in all;
#X text 932 373 MIDI/msg out right, f 20;
#X text 687 379 Signal out left, f 16;
#X obj 80 136 cnv 19 300 76 empty empty empty 20 12 0 12 #c6feff #404040 0;
#X text 1492 1279 comment;
#X obj 107 163 babs.param \$0 thisParam 0;
#X text 402 153 \$1: parent \$0;
#X text 401 172 \$2: label;
#X text 401 133 arguments:;
#X text 402 192 \$3: default value;
#X text 68 59 babs.param is provides internal automation per parameter in bop, f 63;
#X text 1070 238 [babs.param] relies on [babs.inout] for message forwarding from a parent abstraction, f 41;
#X obj 85 414 babs.param.msg \$0 go;
#X text 404 252 \$5: min;
#X text 403 232 \$4: min;
#X text 468 227 optional - bop.ui creates numberbox, f 13;
#X obj 81 453 babs.param.attr \$0 paramThatIslist;
#X obj 81 482 babs.param.spacer;
#X text 371 522 param: includes high and low bounds;
#X text 375 413 message: event;
#X text 365 454 attribute: symbol or list;
#X text 365 486 spacer: blank gui element;
#X text 70 383 different kinds of params:;
#N canvas 414 249 430 375 todo 0;
#X msg 29 165 param curve \$1 \$2;
#X msg 33 216 tempo 120 16;
#X msg 29 137 curve \$1 \$2;
#X msg 28 74 param tempo \$1 \$2;
#X msg 28 47 tempo \$1 \$2;
#X text 133 214 120 bpm \, 16th notes;
#X text 96 233 < go from 1 to 1 in 3 16th notes;
#X msg 33 235 0 1 3;
#X msg 32 274 tempo 120 0;
#X text 132 272 if units is 0 \, timing is in milliseconds;
#X msg 33 293 0 1 3000;
#X text 106 291 < go from 1 to 1 in 3 seconds;
#X text 139 42 control blineseq timing;
#X text 132 128 control bline~ curve;
#X text 14 21 -----------todo ------------------;
#X restore 92 596 pd todo;
#X obj 68 1026 *~ 0.2;
#X obj 68 989 lop~ 1200;
#X msg 977 720 thisParam 1 1000;
#X msg 996 757 thisParam 0 10;
#X msg 69 720 thisParam 0.5;
#X text 69 684 params can be set by name;
#N canvas 237 274 450 300 thisModule 0;
#X obj 80 46 inlet~;
#X obj 115 99 babs.inout \$0;
#X connect 0 1 1 0;
#X restore 479 844 pd thisModule;
#X msg 491 750 parameter-name stop;
#X text 579 779 print parameters and states;
#X text 575 811 reset parameters to default values;
#X obj 84 524 babs.param \$0 paramWithBounds 0 0 3;
#X obj 82 552 babs.param.enum \$0 paramWithBounds zero one two three;
#X text 467 551 an enum list associated with paramWithBounds;
#X connect 0 0 17 0;
#X connect 1 0 0 0;
#X connect 2 0 6 0;
#X connect 3 0 10 0;
#X connect 3 1 39 0;
#X connect 6 0 68 0;
#X connect 7 0 6 1;
#X connect 10 0 5 0;
#X connect 10 1 4 0;
#X connect 12 0 73 0;
#X connect 20 0 19 0;
#X connect 21 0 19 0;
#X connect 22 0 19 0;
#X connect 23 0 19 0;
#X connect 24 0 13 0;
#X connect 28 0 10 1;
#X connect 35 0 73 0;
#X connect 39 0 4 0;
#X connect 41 0 73 0;
#X connect 42 0 39 0;
#X connect 67 0 8 0;
#X connect 67 0 8 1;
#X connect 68 0 67 0;
#X connect 69 0 19 0;
#X connect 70 0 19 0;
#X connect 71 0 37 0;
#X connect 74 0 73 0;
#X coords 0 712 1 711 166 150 0;
