#N canvas 55 98 1415 778 12;
#X msg 600 358 0 1 1000;
#X msg 601 187 setsignal \$1;
#X obj 603 160 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 601 273 1 1000;
#X msg 663 274 0 1000;
#X obj 600 303 s \$0-to-bline;
#X obj 603 55 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 603 82 \$1;
#X obj 600 392 s \$0-to-bline;
#X obj 603 111 s \$0-to-bline;
#X obj 601 214 s \$0-to-bline;
#X text 713 55 floats \; jump to \$1 \;;
#X text 709 174 setsignal message \; signal jumps to \$1 \, float output uneffected \;, f 24;
#X text 729 272 list[2] \; go to \$1 in \$2 ms \;;
#X text 749 356 list [3] \; go from \$1 to \$2 in \$3 ms \;;
#X text 27 13 bop.p.bline~ is a curvy combination of line and line~ that outputs both a signal and a float. similar to line~ \, bop.p.bline~ can respond to a variety of commands.;
#X obj 160 666 cnv 19 126 50 empty empty empty 20 12 0 12 #e3c6ff #404040 0;
#X obj 168 681 bop.p.blineseq;
#X obj 168 726 s \$0-to-bline;
#X obj 168 640 r \$0-to-blineseq;
#X msg 877 69 stop;
#X text 608 17 ---- messaging bop.p.bline~ ----;
#X text 600 520 ---- sequencing bop.p.bline~ with bop.p.blineseq ----;
#X text 40 540 bop.p.blineseq is a helper abstraction that generates looped sequences for bop.p.bline~., f 55;
#X text 1041 657 loop [1]: passed through \; loop [2]: passed through \; loop [3]: sequenced and looped via [text] \; loop [>3 and even]: sequencedand looped via [text] \; loop [>3 and odd]: error thrown \;;
#X text 1041 570 list[1]: passed through \; list[2]: passed through \; list[3]: passed through \; list[>3 and even]: sequenced via [text] \; list[>3 and odd]: error thrown \;;
#X text 44 808 bop.p.blineseq allows for 4 \, 6 \, 8 etc element lists \, which are interpreted as pairs of destinations and values \; \; prepending these messages with loop will loop the seqeunce \; \; the stop messages freezes output \, and rate can be adjusted with the tempo message (todo) \;, f 64;
#X msg 609 699 0.5;
#X msg 647 699 0 1000;
#X msg 703 699 0 1 1000;
#X msg 787 700 loop 0.5;
#X msg 861 700 loop 0 1000;
#X obj 609 744 s \$0-to-blineseq;
#X text 918 68 freeze output;
#X text 607 672 all pass through...;
#X obj 143 115 r \$0-to-bline;
#N canvas 728 501 504 226 draw 0;
#X obj 329 24 inlet~;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-bline 100 float 3;
#A 0 0.731044 0.731002 0.73096 0.730918 0.730876 0.730834 0.730791 0.730749 0.730707 0.730665 0.730623 0.730581 0.730539 0.730497 0.730455 0.730413 0.730371 0.730329 0.730287 0.730245 0.730203 0.730161 0.730119 0.730076 0.730034 0.729992 0.72995 0.729908 0.729866 0.729824 0.729782 0.72974 0.729698 0.729656 0.729614 0.729572 0.72953 0.729488 0.729446 0.729404 0.729362 0.72932 0.729278 0.729236 0.729194 0.729152 0.72911 0.729068 0.729026 0.728984 0.728942 0.7289 0.728858 0.728816 0.728774 0.728732 0.728689 0.728647 0.728605 0.728563 0.728521 0.728479 0.728437 0.728395 0.728353 0.728311 0.728269 0.728227 0.728185 0.728143 0.728101 0.728059 0.728017 0.727975 0.727933 0.727891 0.727849 0.727807 0.727765 0.727723 0.727681 0.727639 0.727597 0.727556 0.727514 0.727472 0.72743 0.727388 0.727346 0.727304 0.727262 0.72722 0.727178 0.727136 0.727094 0.727052 0.72701 0.726968 0.726926 0.726884;
#X coords 0 1.1 100 -0.1 200 140 1 0 0;
#X restore 23 34 graph;
#X obj 352 128 metro 50;
#X obj 352 54 loadbang;
#X msg 352 78 1;
#X obj 352 102 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 329 159 tabwrite~ \$0-bline;
#X connect 0 0 6 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X coords 0 -1 1 1 230 180 2 10 10;
#X restore 143 277 pd draw;
#X obj 133 141 cnv 19 126 50 empty empty empty 20 12 0 12 #c6feff #404040 0;
#X obj 143 154 bop.p.bline~;
#X floatatom 225 202 11 0 0 0 - - - 0;
#X obj 228 235 hsl 162 19 0 1 0 0 empty empty empty -2 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 612 845 1 1000 0 1000;
#X msg 724 846 1 1000 0 1000 0.5 500;
#X msg 734 879 1 1000 0 1000 10;
#X obj 612 913 s \$0-to-blineseq;
#X text 606 820 lists length > 3 are value duration pairs;
#X obj 609 1233 s \$0-to-blineseq;
#X msg 609 1185 loop 0.5;
#X msg 721 1186 loop 0.75 1000;
#X text 838 1184 loops ignored for one and two element lists;
#X obj 610 1139 s \$0-to-blineseq;
#X text 606 978 lists can be looped;
#X text 866 878 < odd lengthed lists error;
#X obj 877 103 s \$0-to-bline;
#X msg 673 359 1 0 4000;
#X text 1042 801 all other messages passed through;
#X msg 609 573 stop;
#X obj 608 609 s \$0-to-blineseq;
#X text 653 572 stop sequence \, stop message passed through;
#X text 1437 1373 comment;
#X text 1041 772 stop: stop sequence and passed through \;;
#X msg 678 1086 loop 1 1000 0 1000 10;
#X text 724 1002 start end duration;
#X text 842 1042 end duration pairs;
#X text 841 1080 < odd lengthed lists > 3 error;
#X msg 556 697 blah;
#X msg 642 1045 loop 1 1000 0 1000 0.5 500;
#X msg 610 1003 loop 1 0 1000;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 17 0 18 0;
#X connect 19 0 17 0;
#X connect 20 0 53 0;
#X connect 27 0 32 0;
#X connect 28 0 32 0;
#X connect 29 0 32 0;
#X connect 30 0 32 0;
#X connect 31 0 32 0;
#X connect 35 0 38 0;
#X connect 38 0 36 0;
#X connect 38 1 39 0;
#X connect 39 0 40 0;
#X connect 41 0 44 0;
#X connect 42 0 44 0;
#X connect 43 0 44 0;
#X connect 47 0 46 0;
#X connect 48 0 46 0;
#X connect 54 0 8 0;
#X connect 56 0 57 0;
#X connect 61 0 50 0;
#X connect 65 0 32 0;
#X connect 66 0 50 0;
#X connect 67 0 50 0;
