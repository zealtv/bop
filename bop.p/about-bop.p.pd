#N canvas 744 242 682 641 12;
#X declare -path ./bop.p;
#X text 549 -9 \$1: parent \$0;
#X text 548 10 \$2: label;
#X text 548 -29 arguments:;
#X floatatom 626 346 5 0 0 0 - - - 0;
#X msg 63 227 0.5;
#X obj 63 254 s \$0-set-thisParam;
#X obj 626 312 r \$0-get-thisParam;
#X obj 1102 -27 savestate, f 17;
#X obj 1101 -54 bop.p.autosave \$0;
#X obj 467 219 r~ \$0-get-thisParam;
#X obj 948 63 inlet~, f 34;
#X obj 1183 243 outlet;
#X text 1183 280 MIDI and messages dump out of right, f 13;
#X obj 948 253 outlet~;
#X text 938 281 Signal out of left, f 9;
#X text 944 37 Signal \, MIDI \, and messages in left, f 36;
#X text 112 187 params can be set or get by name as float or signal;
#X obj 470 285 *~;
#X obj 483 258 noise~;
#X obj 470 410 dac~;
#X obj 1183 157 bop.p.inout \$0;
#X obj 915 -42 declare -path ./bop.p;
#X text 549 30 \$3: default value;
#X obj 216 407 s \$0-set-thisNumber-enum;
#X obj 55 405 s \$0-set-thisNumber;
#N canvas 382 419 450 300 do-the-thing 0;
#X obj 113 195 outlet~;
#X obj 112 82 inlet~;
#X obj 313 82 inlet;
#X obj 315 192 outlet;
#X text 163 136 BUILD MODULE HERE;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X restore 948 164 pd do-the-thing;
#X text 272 5 [bop.p.toggle \$0 thisTog 1];
#X text 272 34 [bop.p.number \$0 thisNumber 0.5];
#X text 27 161 ------------------------------ PARAMETERS -----------------------------------------------------------------------, f 114;
#X obj 110 93 bop.p.button \$0 thisBut;
#X text 272 101 [bop.p.button \$0 thisBut] (no default \, savestate \, or easing);
#X text 92 -73 (right-click & open UI elements);
#X msg 62 500 thisParam 1 100;
#X msg 81 537 thisParam 0 3000;
#X text 1005 347 (Standard GOP width: 166);
#X text 929 -109 ---------- bop module template -------------;
#X text 273 -28 [bop.p.param \$0 thisParam 0.0];
#X msg 942 618 stop;
#X text 272 65 [bop.p.enum \$0 thisNumber] (binds to number to provide menu list), f 65;
#X msg 55 371 range 0 3;
#X obj 431 563 bop.p.bline~;
#X text 623 271 or [r \$0-get-*] for control rate;
#X text 620 211 access parameters with [r~ \$0-get-*] for signal rate, f 24;
#X text 66 -121 The bop.p library provides smart GUI abstractions along with other useful things., f 83;
#X msg 942 720 param get;
#X msg 942 647 param stop;
#X msg 943 885 param curve \$1 \$2;
#X text 530 564 < internally \, parameters uses the bop.p.bline~ and bop.p.blineseq abstractions for automation. See the bop.p.bline~ help file for details., f 27;
#X obj 470 356 *~ 0.1;
#X obj 629 373 hsl 162 19 0 1 0 0 empty empty empty -2 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X text 200 491 parameters accept a variety of messages!, f 23;
#X msg 1258 767 tempo 120 16;
#X msg 943 692 get;
#X msg 943 857 curve \$1 \$2;
#X msg 942 794 param tempo \$1 \$2;
#X msg 942 767 tempo \$1 \$2;
#X text 1358 765 120 bpm \, 16th notes;
#X text 1321 784 < go from 1 to 1 in 3 16th notes;
#X msg 1258 786 0 1 3;
#X msg 1257 825 tempo 120 0;
#X text 1357 823 if units is 0 \, timing is in milliseconds;
#X text 1665 936 comment;
#X msg 1258 844 0 1 3000;
#X text 1331 842 < go from 1 to 1 in 3 seconds;
#X msg 943 576 flush;
#X text 1043 573 flush hanging midi notes;
#X text 1054 617 stop automation;
#X text 1042 685 output params (dump);
#X text 1053 762 control blineseq timing;
#X text 1046 848 control bline~ curve;
#X text 923 524 -----------PARAMETER MESSAGES (TODO) ------------------;
#N canvas 237 274 450 300 thisModule 0;
#X obj 80 46 inlet~;
#X obj 115 99 bop.p.inout \$0;
#X connect 0 1 1 0;
#X restore 60 697 pd thisModule;
#X obj 235 233 r \$0-get-thisParam;
#X floatatom 235 261 5 0 0 0 - - - 0;
#X text 50 313 GUI elements can be configured via their sends;
#X msg 93 574 thisParam loop 0.5 1000 0 1000 1 1000;
#X msg 107 631 thisParam stop;
#X msg 113 656 thisParam 0 100;
#X msg 102 602 thisParam loop 1 0 300;
#X obj 431 530 bop.p.blineseq;
#X text 1016 648 < implemented;
#X text 61 836 stop // freeze automation \;, f 95;
#X text 62 753 f // set \; f1 f2 //go to f1 in f2ms \; f1 f2 f3 // go from f1 to f2 in f3ms \; f1 f2 f3 f4 // go to f1 in f2ms \, go to f3 in f4ms...etc for an even number of arguments \;, f 95;
#X text 62 872 loop f // set \; loop f1 f2 //go to f1 in f2ms \; loop f1 f2 f3 // go from f1 to f2 in f3ms \, reapeat \; loop f1 f2 f3 f4 // go to f1 in f2ms \, go to f3 in f4ms...etc for an even number of arguments \, repeat \;, f 103;
#X msg 216 373 list itemOne itemTwo itemThree;
#X obj 56 339 loadbang;
#X obj 210 340 loadbang;
#X msg 29 226 0;
#X obj 29 199 loadbang;
#X obj 470 319 lop~ 340;
#X obj 1051 127 r \$0-midi;
#X obj 1235 63 r \$0-stop;
#X obj 1250 88 r \$0-params;
#X obj 1218 41 r \$0-dump;
#X connect 3 0 49 0;
#X connect 4 0 5 0;
#X connect 6 0 3 0;
#X connect 7 0 8 1;
#X connect 7 1 8 0;
#X connect 8 0 7 0;
#X connect 9 0 17 0;
#X connect 10 0 25 0;
#X connect 10 1 20 0;
#X connect 17 0 89 0;
#X connect 18 0 17 1;
#X connect 20 0 11 0;
#X connect 25 0 13 0;
#X connect 25 1 11 0;
#X connect 32 0 71 0;
#X connect 33 0 71 0;
#X connect 39 0 24 0;
#X connect 48 0 19 0;
#X connect 48 0 19 1;
#X connect 72 0 73 0;
#X connect 75 0 71 0;
#X connect 76 0 71 0;
#X connect 77 0 71 0;
#X connect 78 0 71 0;
#X connect 79 0 40 0;
#X connect 84 0 23 0;
#X connect 85 0 39 0;
#X connect 86 0 84 0;
#X connect 87 0 5 0;
#X connect 88 0 87 0;
#X connect 89 0 48 0;
#X connect 90 0 25 1;
#X coords 0 641 1 640 166 150 0;
