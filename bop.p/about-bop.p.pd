#N canvas 15 37 679 889 12;
#X declare -path ./bop.p;
#X text 549 149 \$1: parent \$0;
#X text 548 168 \$2: label;
#X text 548 129 arguments:;
#X floatatom 626 504 5 0 0 0 - - - 0;
#X msg 63 385 0.5;
#X obj 63 412 s \$0-set-thisParam;
#X obj 626 470 r \$0-get-thisParam;
#X obj 1102 131 savestate, f 17;
#X obj 1101 104 bop.p.autosave \$0;
#X obj 467 377 r~ \$0-get-thisParam;
#X obj 948 221 inlet~, f 34;
#X obj 1183 401 outlet;
#X text 1183 438 MIDI and messages dump out of right, f 13;
#X obj 948 411 outlet~;
#X text 938 439 Signal out of left, f 9;
#X text 944 195 Signal \, MIDI \, and messages in left, f 36;
#X text 56 351 params can be set or get by name as float or signal;
#X obj 470 443 *~;
#X obj 483 416 noise~;
#X obj 470 536 dac~;
#X obj 1183 315 bop.p.inout \$0;
#X obj 915 116 declare -path ./bop.p;
#X obj 1051 285 r \$0-midi-in;
#X obj 1050 363 s \$0-midi-out;
#X obj 110 190 bop.p.number \$0 thisNumber 7;
#X text 549 188 \$3: default value;
#X obj 110 130 bop.p.param \$0 thisParam 0.5;
#X obj 110 160 bop.p.toggle \$0 thisTog 1;
#X obj 110 220 bop.p.enum \$0 thisNumber;
#X obj 216 550 s \$0-set-thisNumber-enum;
#X obj 55 548 s \$0-set-thisNumber;
#N canvas 382 419 450 300 do-the-thing 0;
#X obj 113 195 outlet~;
#X obj 112 82 inlet~;
#X obj 313 82 inlet;
#X obj 315 192 outlet;
#X text 163 136 BUILD MODULE HERE;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X restore 948 322 pd do-the-thing;
#X text 272 163 [bop.p.toggle \$0 thisTog 1];
#X text 272 192 [bop.p.number \$0 thisNumber 0.5];
#X text 27 319 ------------------------------ PARAMETERS -----------------------------------------------------------------------, f 114;
#X obj 110 251 bop.p.button \$0 thisBut;
#X text 272 259 [bop.p.button \$0 thisBut] (no default \, savestate \, or easing);
#X text 92 85 (right-click & open UI elements);
#X msg 62 658 thisParam 1 100;
#X msg 81 695 thisParam 0 3000;
#X text 1005 505 (Standard GOP width: 166);
#X text 929 49 ---------- bop module template -------------;
#X text 273 130 [bop.p.param \$0 thisParam 0.0];
#X msg 942 776 stop;
#X text 272 223 [bop.p.enum \$0 thisNumber] (binds to number to provide menu list), f 65;
#X msg 55 514 range 0 3;
#X obj 431 721 bop.p.bline~;
#X text 623 429 or [r \$0-get-*] for control rate;
#X text 620 369 access parameters with [r~ \$0-get-*] for signal rate, f 24;
#X text 66 37 The bop.p library provides smart GUI abstractions along with other useful things., f 83;
#X msg 942 878 param get;
#X msg 942 805 param stop;
#X msg 943 1043 param curve \$1 \$2;
#X text 530 722 < internally \, parameters uses the bop.p.bline~ and bop.p.blineseq abstractions for automation. See the bop.p.bline~ help file for details., f 27;
#X obj 470 482 *~ 0.1;
#X obj 629 531 hsl 162 19 0 1 0 0 empty empty empty -2 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X text 200 649 parameters accept a variety of messages!, f 23;
#X msg 1258 925 tempo 120 16;
#X msg 943 850 get;
#X msg 943 1015 curve \$1 \$2;
#X msg 942 952 param tempo \$1 \$2;
#X msg 942 925 tempo \$1 \$2;
#X text 1358 923 120 bpm \, 16th notes;
#X text 1321 942 < go from 1 to 1 in 3 16th notes;
#X msg 1258 944 0 1 3;
#X msg 1257 983 tempo 120 0;
#X text 1357 981 if units is 0 \, timing is in milliseconds;
#X text 1665 1094 comment;
#X msg 1258 1002 0 1 3000;
#X text 1331 1000 < go from 1 to 1 in 3 seconds;
#X msg 943 734 flush;
#X text 1043 731 flush hanging midi notes;
#X text 1054 775 stop automation;
#X text 1042 843 output params (dump);
#X text 1053 920 control blineseq timing;
#X text 1046 1006 control bline~ curve;
#X text 923 682 -----------PARAMETER MESSAGES (TODO) ------------------;
#N canvas 237 274 450 300 thisModule 0;
#X obj 80 46 inlet~;
#X obj 115 99 bop.p.inout \$0;
#X connect 0 1 1 0;
#X restore 60 855 pd thisModule;
#X obj 235 391 r \$0-get-thisParam;
#X floatatom 235 419 5 0 0 0 - - - 0;
#X text 51 489 GUI elements can be configured via their sends;
#X msg 93 732 thisParam loop 0.5 1000 0 1000 1 1000;
#X msg 107 789 thisParam stop;
#X msg 113 814 thisParam 0 100;
#X msg 102 760 thisParam loop 1 0 300;
#X obj 431 688 bop.p.blineseq;
#X text 1016 806 < implemented;
#X text 61 994 stop // freeze automation \;, f 95;
#X text 62 911 f // set \; f1 f2 //go to f1 in f2ms \; f1 f2 f3 // go from f1 to f2 in f3ms \; f1 f2 f3 f4 // go to f1 in f2ms \, go to f3 in f4ms...etc for an even number of arguments \;, f 95;
#X text 62 1030 loop f // set \; loop f1 f2 //go to f1 in f2ms \; loop f1 f2 f3 // go from f1 to f2 in f3ms \, reapeat \; loop f1 f2 f3 f4 // go to f1 in f2ms \, go to f3 in f4ms...etc for an even number of arguments \, repeat \;, f 103;
#X msg 216 516 list itemOne itemTwo itemThree;
#X connect 3 0 55 0;
#X connect 4 0 5 0;
#X connect 6 0 3 0;
#X connect 7 0 8 1;
#X connect 7 1 8 0;
#X connect 8 0 7 0;
#X connect 9 0 17 0;
#X connect 10 0 31 0;
#X connect 10 1 20 0;
#X connect 17 0 54 0;
#X connect 18 0 17 1;
#X connect 20 0 11 0;
#X connect 22 0 31 1;
#X connect 31 0 13 0;
#X connect 31 1 23 0;
#X connect 38 0 77 0;
#X connect 39 0 77 0;
#X connect 45 0 30 0;
#X connect 54 0 19 0;
#X connect 54 0 19 1;
#X connect 78 0 79 0;
#X connect 81 0 77 0;
#X connect 82 0 77 0;
#X connect 83 0 77 0;
#X connect 84 0 77 0;
#X connect 85 0 46 0;
#X connect 90 0 29 0;
#X coords 0 889 1 888 166 150 0;
