#N canvas 19 42 1097 842 12;
#X obj 50 62 inlet;
#X obj 140 674 list length;
#X obj 52 709 list prepend, f 13;
#X text 1057 2654 comment;
#X obj 173 573 s \$0-stop;
#X msg 173 519 stop;
#X obj 52 635 t l l b b, f 12;
#X obj 226 267 s \$0-loop;
#X msg 226 236 0;
#X obj 52 504 list;
#X obj 193 301 s \$0-input;
#X obj 52 371 r \$0-input;
#X obj 194 195 t a b;
#X obj 82 267 s \$0-loop;
#X obj 49 301 s \$0-input;
#X obj 50 195 t a b;
#X msg 82 236 1;
#X obj 131 236 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 50 154 route loop, f 21;
#X text 375 187 float: passed through \; list[2]: passed through \; list[3]: passed through \; list[>3 and even]: sequenced via [text] \; list[>3 and odd]: error thrown \;;
#X text 373 281 loop [1]: passed through \; loop [2]: passed through \; loop [3]: sequenced via text \; loop [>3 and even]: sequenced via text \; loop [>3 and odd]: error thrown \;;
#X obj 133 756 r \$0-loop;
#X obj 52 784 list prepend;
#X obj 125 1145 list split 1;
#X text 61 852 no loop;
#X text 438 850 loop;
#X obj 52 913 route 1 2 3;
#X obj 573 950 t l l;
#X msg 655 982 \$1;
#X obj 655 1012 % 2;
#X obj 574 1044 list prepend;
#X obj 79 1758 outlet;
#X obj 79 1722 r \$0-out;
#X obj 252 563 s \$0-out;
#X text 377 129 bang: output last list, f 23;
#X text 378 148 stop: freeze output \, pass message through;
#X obj 476 913 route 1 2 3, f 17;
#X obj 574 1075 route 0 1;
#X obj 625 1111 print poorly formatted loop message;
#X obj 604 1111 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 51 951 s \$0-out;
#X text 150 892 floats passed through;
#X text 143 909 list[2] passed through;
#X text 143 926 list[3] passed through;
#X obj 126 951 t l l;
#X msg 207 982 \$1;
#X obj 207 1012 % 2;
#X obj 126 1044 list prepend;
#X obj 126 1075 route 0 1;
#X obj 177 1111 print poorly formatted loop message;
#X obj 156 1111 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X text 163 1206 cue destination duration pairs in text;
#X obj 574 1147 list split 1;
#X obj 476 949 s \$0-out;
#X text 621 906 floats passed through;
#X text 621 922 list[2] passed through;
#X text 549 1259 loop start end duration triplet in text;
#X obj 476 868 route 1;
#X obj 52 828 route 0, f 61;
#X obj 346 1664 r \$0-loop;
#X text 609 1205 cue destination duration pairs in text;
#X obj 614 1180 s \$0-store-pairs;
#X obj 165 1181 s \$0-store-pairs;
#X obj 82 1331 r \$0-store-pairs;
#X obj 346 1688 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 605 1369 -1;
#X text 643 1367 clear seq;
#X obj 605 1398 text delete \$0-blineseq;
#X obj 52 407 route bang float list stop, f 29;
#X obj 202 452 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 553 1235 s \$0-store-triples;
#X obj 368 1498 text set \$0-blineseq 1e+15;
#X obj 345 1338 r \$0-store-triples;
#X obj 79 1667 text sequence \$0-blineseq -w wait;
#N canvas 476 231 686 604 parse-for-text 0;
#X obj 218 2 inlet;
#N canvas 1020 457 450 300 bop.p.iter 0;
#X obj 110 109 until;
#X obj 123 192 list store;
#X obj 144 76 t b b l;
#X obj 110 134 f;
#X obj 148 135 + 1;
#X msg 167 109 0, f 2;
#X msg 110 165 get \$1 1;
#X obj 147 33 inlet;
#X obj 123 247 outlet;
#X connect 0 0 3 0;
#X connect 1 0 8 0;
#X connect 1 1 0 1;
#X connect 2 0 0 0;
#X connect 2 1 5 0;
#X connect 2 2 1 1;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 3 1;
#X connect 5 0 3 1;
#X connect 6 0 1 0;
#X connect 7 0 2 0;
#X restore 218 117 pd bop.p.iter;
#X obj 218 70 t l b, f 16;
#N canvas 1020 486 450 300 bop.p.counter 0;
#X obj 101 53 inlet;
#X obj 101 91 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 174 54 inlet;
#X obj 106 149 f;
#X obj 145 150 + 1;
#X text 176 82 < reset to n on next count;
#X obj 103 224 outlet;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 1;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 3 1;
#X restore 218 212 pd bop.p.counter;
#X msg 327 185 0;
#X obj 218 250 % 2;
#X obj 218 283 pack, f 24;
#X obj 218 323 route 0 1, f 13;
#X obj 199 444 pack f f f, f 16;
#X obj 262 360 t f f f;
#X msg 266 395 0;
#X obj 197 479 route 0;
#X obj 126 551 outlet;
#X msg 126 403 list wait \$1;
#X obj 383 214 route float;
#X obj 218 153 t b a, f 24;
#X text 418 184 calculate timing from symbol here;
#X connect 0 0 2 0;
#X connect 1 0 15 0;
#X connect 2 0 1 0;
#X connect 2 1 4 0;
#X connect 3 0 5 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 1;
#X connect 7 1 9 0;
#X connect 8 0 11 0;
#X connect 9 0 13 0;
#X connect 9 1 10 0;
#X connect 9 2 8 2;
#X connect 10 0 8 0;
#X connect 11 0 12 0;
#X connect 13 0 12 0;
#X connect 14 0 6 1;
#X connect 15 0 3 0;
#X connect 15 1 14 0;
#X restore 105 1464 pd parse-for-text;
#X obj 106 1502 text set \$0-blineseq 1e+15;
#X obj 128 1395 s \$0-clear-seq;
#X obj 605 1338 r \$0-clear-seq;
#X obj 391 1399 s \$0-clear-seq;
#X obj 109 463 t l b;
#X obj 141 494 t b b;
#X obj 141 603 s \$0-clear-seq;
#X text 655 1070 loop triples and even length list sent to seq, f 23;
#X text 206 1074 even length list sent to seq, f 29;
#X obj 82 1363 t b l b;
#X obj 345 1368 t b l b;
#X obj 345 1540 s \$0-start;
#X obj 82 1540 s \$0-start;
#X obj 79 1614 r \$0-start;
#X obj 602 1443 cnv 19 180 80 empty empty empty 20 12 0 12 #e0e0e0 #404040 0;
#X obj 609 1486 text define \$0-blineseq;
#X msg 609 1457 click;
#X msg 79 1638 line 0 \, auto;
#X obj 307 1712 spigot;
#X obj 307 1765 s \$0-start;
#X obj 307 1736 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X msg 368 1462 \$1 \$2 \$3 \, list wait \$3;
#X obj 79 1696 s \$0-out;
#X text 738 263 stop // freeze automation \;, f 95;
#X text 739 180 f // set \; f1 f2 //go to f1 in f2ms \; f1 f2 f3 // go from f1 to f2 in f3ms \; f1 f2 f3 f4 // go to f1 in f2ms \, go to f3 in f4ms...etc for an even number of arguments \;, f 95;
#X text 739 299 loop f // set \; loop f1 f2 //go to f1 in f2ms \; loop f1 f2 f3 // go from f1 to f2 in f3ms \, reapeat \; loop f1 f2 f3 f4 // go to f1 in f2ms \, go to f3 in f4ms...etc for an even number of arguments \, repeat \;, f 103;
#X text 113 1438 calc wait times here;
#X text 376 1437 calc wait times here;
#X connect 0 0 18 0;
#X connect 1 0 2 1;
#X connect 2 0 22 0;
#X connect 5 0 4 0;
#X connect 5 0 33 0;
#X connect 6 0 2 0;
#X connect 6 1 1 0;
#X connect 8 0 7 0;
#X connect 9 0 6 0;
#X connect 11 0 68 0;
#X connect 12 0 10 0;
#X connect 12 1 8 0;
#X connect 15 0 14 0;
#X connect 15 1 16 0;
#X connect 15 1 17 0;
#X connect 16 0 13 0;
#X connect 18 0 15 0;
#X connect 18 1 12 0;
#X connect 21 0 22 1;
#X connect 22 0 58 0;
#X connect 23 1 62 0;
#X connect 26 0 40 0;
#X connect 26 1 40 0;
#X connect 26 2 40 0;
#X connect 26 3 44 0;
#X connect 27 0 30 0;
#X connect 27 1 28 0;
#X connect 28 0 29 0;
#X connect 29 0 30 1;
#X connect 30 0 37 0;
#X connect 32 0 31 0;
#X connect 36 0 53 0;
#X connect 36 1 53 0;
#X connect 36 2 70 0;
#X connect 36 3 27 0;
#X connect 37 0 52 0;
#X connect 37 1 38 0;
#X connect 37 1 39 0;
#X connect 44 0 47 0;
#X connect 44 1 45 0;
#X connect 45 0 46 0;
#X connect 46 0 47 1;
#X connect 47 0 48 0;
#X connect 48 0 23 0;
#X connect 48 1 49 0;
#X connect 48 1 50 0;
#X connect 52 1 61 0;
#X connect 57 0 36 0;
#X connect 58 0 26 0;
#X connect 58 1 57 0;
#X connect 59 0 64 0;
#X connect 63 0 84 0;
#X connect 64 0 93 1;
#X connect 65 0 67 0;
#X connect 68 0 9 0;
#X connect 68 1 79 0;
#X connect 68 2 79 0;
#X connect 68 3 69 0;
#X connect 68 4 33 0;
#X connect 69 0 80 0;
#X connect 72 0 85 0;
#X connect 73 0 97 0;
#X connect 73 2 93 0;
#X connect 74 0 75 0;
#X connect 77 0 65 0;
#X connect 79 0 9 1;
#X connect 79 0 6 0;
#X connect 79 1 80 0;
#X connect 80 0 81 0;
#X connect 80 1 5 0;
#X connect 84 0 87 0;
#X connect 84 1 74 0;
#X connect 84 2 76 0;
#X connect 85 0 86 0;
#X connect 85 1 96 0;
#X connect 85 2 78 0;
#X connect 88 0 92 0;
#X connect 91 0 90 0;
#X connect 92 0 73 0;
#X connect 93 0 95 0;
#X connect 95 0 94 0;
#X connect 96 0 71 0;
